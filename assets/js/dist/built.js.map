{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["(function() {\n  \"use strict\";\n\n  /**\n   * File navigation.js.\n   *\n   * Handles toggling the navigation menu for small screens and enables TAB key\n   * navigation support for dropdown menus.\n   */\n  function localNavigation() {\n    var container, button, menu, links, i, len;\n    container = document.getElementById(\"site-navigation\");\n\n    if (!container) {\n      return;\n    }\n\n    button = container.getElementsByTagName(\"button\")[0];\n\n    if (\"undefined\" === typeof button) {\n      return;\n    }\n\n    menu = container.getElementsByTagName(\"ul\")[0]; // Hide menu toggle button if menu is empty and return early.\n\n    if (\"undefined\" === typeof menu) {\n      button.style.display = \"none\";\n      return;\n    }\n\n    menu.setAttribute(\"aria-expanded\", \"false\");\n\n    if (-1 === menu.className.indexOf(\"nav-menu\")) {\n      menu.className += \" nav-menu\";\n    }\n\n    button.onclick = function() {\n      if (-1 !== container.className.indexOf(\"toggled\")) {\n        container.className = container.className.replace(\" toggled\", \"\");\n        button.setAttribute(\"aria-expanded\", \"false\");\n        menu.setAttribute(\"aria-expanded\", \"false\");\n      } else {\n        container.className += \" toggled\";\n        button.setAttribute(\"aria-expanded\", \"true\");\n        menu.setAttribute(\"aria-expanded\", \"true\");\n      }\n    }; // Get all the link elements within the menu.\n\n    links = menu.getElementsByTagName(\"a\"); // Each time a menu link is focused or blurred, toggle focus.\n\n    for (i = 0, len = links.length; i < len; i++) {\n      links[i].addEventListener(\"focus\", toggleFocus, true);\n      links[i].addEventListener(\"blur\", toggleFocus, true);\n    }\n    /**\n     * Sets or removes .focus class on an element.\n     */\n\n    function toggleFocus() {\n      var self = this; // Move up through the ancestors of the current link until we hit .nav-menu.\n\n      while (-1 === self.className.indexOf(\"nav-menu\")) {\n        // On li elements toggle the class .focus.\n        if (\"li\" === self.tagName.toLowerCase()) {\n          if (-1 !== self.className.indexOf(\"focus\")) {\n            self.className = self.className.replace(\" focus\", \"\");\n          } else {\n            self.className += \" focus\";\n          }\n        }\n\n        self = self.parentElement;\n      }\n    }\n    /**\n     * Toggles `focus` class to allow submenu access on tablets.\n     */\n\n    (function(container) {\n      var touchStartFn,\n        i,\n        parentLink = container.querySelectorAll(\n          \".menu-item-has-children > a, .page_item_has_children > a\"\n        );\n\n      if (\"ontouchstart\" in window) {\n        touchStartFn = function touchStartFn(e) {\n          var menuItem = this.parentNode,\n            i;\n\n          if (!menuItem.classList.contains(\"focus\")) {\n            e.preventDefault();\n\n            for (i = 0; i < menuItem.parentNode.children.length; ++i) {\n              if (menuItem === menuItem.parentNode.children[i]) {\n                continue;\n              }\n\n              menuItem.parentNode.children[i].classList.remove(\"focus\");\n            }\n\n            menuItem.classList.add(\"focus\");\n          } else {\n            menuItem.classList.remove(\"focus\");\n          }\n        };\n\n        for (i = 0; i < parentLink.length; ++i) {\n          parentLink[i].addEventListener(\"touchstart\", touchStartFn, false);\n        }\n      }\n    })(container);\n  }\n\n  /**\n   * File skip-link-focus-fix.js.\n   *\n   * Helps with accessibility for keyboard only users.\n   *\n   * Learn more: https://git.io/vWdr2\n   */\n  function skipLinkFocusFix() {\n    var isIe = /(trident|msie)/i.test(navigator.userAgent);\n\n    if (isIe && document.getElementById && window.addEventListener) {\n      window.addEventListener(\n        \"hashchange\",\n        function() {\n          var id = location.hash.substring(1),\n            element;\n\n          if (!/^[A-z0-9_-]+$/.test(id)) {\n            return;\n          }\n\n          element = document.getElementById(id);\n\n          if (element) {\n            if (\n              !/^(?:a|select|input|button|textarea)$/i.test(element.tagName)\n            ) {\n              element.tabIndex = -1;\n            }\n\n            element.focus();\n          }\n        },\n        false\n      );\n    }\n  }\n\n  function spinWheelEvent() {\n    var landingImage = document.getElementById(\"image-landing\");\n    var landingImage2 = document.getElementById(\"image-landing-2\");\n    var landingImage3 = document.getElementById(\"image-radial\");\n\n    var requestAnimation =\n      window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      function(callback) {\n        window.setTimeout(callback, 1000 / 60);\n      };\n\n    var scrollTicking = false;\n    var scrollWinY = 0;\n\n    (function initSpinYaxis() {\n      scrollWinY = window.pageYOffset;\n      landingImage.style.transform = \"translate(-50%,-50%)rotate(\".concat(\n        scrollWinY,\n        \"deg)\"\n      );\n      landingImage3.style.transform = \"translate(-50%,-50%)rotate(\".concat(\n        scrollWinY,\n        \"deg)\"\n      );\n    })();\n\n    function spinScrolling() {\n      scrollWinY = window.scrollY;\n\n      if (document.body.dataset.bodyScroll === \"unlocked\") {\n        return spinScrollTick();\n      }\n    }\n\n    function spinScrollTick() {\n      if (scrollTicking !== true) {\n        requestAnimation(spinUpdate);\n        scrollTicking = true;\n      }\n    }\n\n    function spinUpdate() {\n      landingImage.style.transform = \"translate(-50%,-50%)rotate(\".concat(\n        scrollWinY,\n        \"deg)\"\n      );\n      landingImage3.style.transform = \"translate(-50%,-50%)rotate(\".concat(\n        scrollWinY,\n        \"deg)\"\n      );\n      scrollTicking = false;\n    }\n\n    window.addEventListener(\"scroll\", spinScrolling, false);\n  }\n\n  /**\n   * Release default underscore script.\n   * Skip to focus and navigation toggle\n   */\n\n  localNavigation();\n  skipLinkFocusFix();\n  spinWheelEvent();\n  /**\n   * Replace feather attribute as Icon\n   * @param feathericon(c)\n   */\n  // @ts-ignore\n\n  feather.replace();\n  /**\n   * Get computed background color to match\n   * the body element or user want to.\n   */\n  // document.addEventListener('DOMContentLoaded', () => {\n  // \tconst header = document.getElementById('masthead');\n  // \tconst menu = document.getElementById('primary-menu');\n  // \tconst bodyBg = window.getComputedStyle(document.body);\n  // \tconst bgProp = bodyBg.getPropertyValue('background-color');\n  // \t[].concat(header, menu).forEach(item => {\n  // \t\titem.style.backgroundColor = `${bgProp}`;\n  // \t});\n  // });\n\n  /**\n   * Get rotate animation for a while and run\n   * only after the document completely loaded\n   */\n\n  document.onreadystatechange = function() {\n    var figureLanding = document.getElementById(\"image-landing\");\n    var figureLanding2 = document.getElementById(\"image-landing-2\");\n    var figureLanding3 = document.getElementById(\"image-radial\");\n    var figureLanding4 = document.getElementById(\"image-backcover\");\n\n    if (document.readyState === \"complete\") {\n      figureLanding.setAttribute(\"data-spin-animation\", \"roll\");\n      figureLanding3.setAttribute(\"data-spin-animation\", \"roll\");\n      figureLanding4.setAttribute(\"data-spin-animation\", \"roll\");\n      figureLanding2.setAttribute(\"data-type-animation\", \"reveal-opacity\");\n      setTimeout(function() {\n        document.body.dataset.bodyScroll = \"unlocked\";\n        figureLanding.setAttribute(\"data-spin-animation\", \"off\");\n        figureLanding2.setAttribute(\"data-type-animation\", \"off\");\n        figureLanding3.setAttribute(\"data-spin-animation\", \"off\");\n        figureLanding4.setAttribute(\"data-spin-animation\", \"off\");\n        figureLanding2.setAttribute(\"data-spin-effect\", \"cubic-roll\");\n        figureLanding3.setAttribute(\"data-spin-effect\", \"cubic-roll\");\n      }, 7000);\n    }\n  };\n\n  document.body.dataset.bodyScroll = \"unlocked\";\n})();\n"],"file":"built.js"}